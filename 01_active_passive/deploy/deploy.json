{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string",
            "allowedValues": [],
            "metadata": {
                "description": ""
            }
        },
        "VM Username": {
            "type": "string",
            "defaultValue": "admin123",
            "metadata": {
                "description": ""
            }
        },
        "VM Password": {
            "type": "securestring",
            "metadata": {
                "description": ""
            }
        },
        "Resource Group West": {
            "type": "string",
            "defaultValue": "[replace(resourceGroup().name, 'east', 'west')]",
            "metadata": {
                "description": ""
            }
        },
        "base VM size": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [],
            "metadata": {
                "description": ""
            }
        },
        "Re-deploy": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": ["true","false"],
            "metadata": {
                "description": ""
            }
        },
        "Assigned Identity Name": {
            "type": "string",
            "defaultValue": "admin-vms",
            "metadata": {
                "description": ""
            }
        },
		"Assigned Identity Resource Group": {
            "type": "string",
            "defaultValue": "cloud-shell-storage-westus",
            "metadata": {
                "description": ""
            }
        }
    },
    "variables": {
        "baseUrl": "[deployment().properties.templateLink.uri]",
        "rando": "[uniqueString(resourceGroup().id, parameters('name'))]",
        "baseName": "[concat(parameters('name'), '-', variables('rando'))]",
        "baseNameSafe": "[concat(substring(toLower(replace(variables('baseName'),'-', '')), 0, 8),variables('rando'))]",
        "rgEast": "[resourceGroup().name]",
        "rgWest": "[parameters('Resource Group West')]",
        "vnetSettingsEast": {
            "name": "[concat(variables('baseName'), '-vnet-east')]",
            "addressSpace": {
                "addressPrefixes": ["10.0.0.0/16"]
            },
            "subnets": [
                {
                    "name": "aks",
                    "properties": {
                        "addressPrefix": "10.0.2.0/24",
                        "serviceEndpoints": [],
                        "delegations": [],
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                },
                {
                    "name": "admin",
                    "properties": {
                        "addressPrefix": "10.0.3.0/24",
                        "serviceEndpoints": [],
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                }
            ]
        },
        "vnetSettingsWest": {
            "name": "[concat(variables('baseName'), '-vnet-west')]",
            "addressSpace": {
                "addressPrefixes": ["10.1.0.0/16"]
            },
            "subnets": [
                {
                    "name": "aks",
                    "properties": {
                        "addressPrefix": "10.1.2.0/24",
                        "serviceEndpoints": [],
                        "delegations": [],
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                },
                {
                    "name": "admin",
                    "properties": {
                        "addressPrefix": "10.1.3.0/24",
                        "serviceEndpoints": [],
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                }
            ]
        },
        "postgresSettingsEast": {
            "name": "[concat(variables('baseName'), '-psql-east')]",
            "location": "eastus",
            "properties": {
                "createMode": "Default",
                "version": "10.0",
                "administratorLogin": "[parameters('VM Username')]",
                "administratorLoginPassword": "[parameters('VM Password')]",
                "storageProfile": {
                    "storageMB": 102400,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled",
                    "storageAutoGrow": "Enabled"
                },
                "infrastructureEncryption": "Disabled"
            }
        },
        "postgresSettingsWest": {
            "name": "[concat(variables('baseName'), '-psql-west')]",
            "location": "westus",
            "properties": {
                "createMode": "Replica",
                "sourceServerId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('rgEast'),'/providers/Microsoft.DBforPostgreSQL/servers/',variables('postgresSettingsEast').name)]",
                "storageProfile": {
                    "storageMB": 102400,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled"
                }        
            }
        },
        "aksSettingsEast": {
            "name": "[concat(variables('baseName'), '-aks-east')]",
            "location": "eastus",
            "dnsPrefix": "[variables('vnetSettingsEast').name]",
            "nodeSubnet": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('rgEast'),'/providers/Microsoft.Network/virtualNetworks/',variables('vnetSettingsEast').name,'/subnets/','aks')]",
            "nodeSize": "[parameters('base VM size')]",
            "omsId": "/subscriptions/7e057795-c9f1-487d-9873-efdf05004976/resourcegroups/defaultresourcegroup-neu/providers/microsoft.operationalinsights/workspaces/defaultworkspace-7e057795-c9f1-487d-9873-efdf05004976-neu"
        },
        "aksSettingsWest": {
            "name": "[concat(variables('baseName'), '-aks-west')]",
            "location": "westus",
            "dnsPrefix": "[variables('vnetSettingsWest').name]",
            "nodeSubnet": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('rgWest'),'/providers/Microsoft.Network/virtualNetworks/',variables('vnetSettingsWest').name,'/subnets/','aks')]",
            "nodeSize": "[parameters('base VM size')]",
            "omsId": "/subscriptions/7e057795-c9f1-487d-9873-efdf05004976/resourcegroups/defaultresourcegroup-neu/providers/microsoft.operationalinsights/workspaces/defaultworkspace-7e057795-c9f1-487d-9873-efdf05004976-neu"
        },
        "pipSettingsEast":{
            "name": "[concat(variables('baseName'), '-pip-lb-east')]",
            "location": "eastus"
        },
        "pipSettingsWest":{
            "name": "[concat(variables('baseName'), '-pip-lb-west')]",
            "location": "westus"
        },
        "trafficManagerSettings": {
            "name": "[concat(variables('baseName'), '-tm')]"
        },
        "vmSettingsEast": {
            "name": "[concat(variables('baseName'), '-vm-east')]",
            "location": "eastus",
            "nic": {
                "name": "[concat(variables('baseName'), '-nic-vm-east')]",
                "location": "eastus",
                "ipConfiguration": {
                    "name": "[concat(variables('baseName'), '-ipconfig-vm-east')]",
                    "privateIpAllocationMethod": "dynamic",
                    "vnet": "[variables('vnetSettingsEast').name]",
                    "subnet": "admin"
                },
                "pip": {
                    "name": "[concat(variables('baseName'), '-pip-vm-east')]",
                    "location": "eastus",
                    "allocationMethod": "Static",
                    "version": "IPv4"
                }
            },
            "size": "[parameters('base VM size')]",
            "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "16.04-LTS",
                "version": "latest"
            },
            "osDiskName": "[concat(variables('baseName'), '-osdisk-vm-east')]",
            "admin": "[parameters('VM username')]",
            "password": "[parameters('VM password')]",
            "computerName": "admin-east",
            "isMarketplace": false,
            "extension": {
                "name": "[concat(variables('baseName'), '-vm-vm-east-ext')]",
                "location": "eastus",
                "files": [
                    "[uri(variables('baseUrl'),'scripts/vmsetup.sh')]"
                ],
                "vmName": "[concat(variables('baseName'), '-vm-east')]"
            }
        },
        "vmSettingsWest": {
            "name": "[concat(variables('baseName'), '-vm-west')]",
            "location": "westus",
            "nic": {
                "name": "[concat(variables('baseName'), '-nic-vm-west')]",
                "location": "westus",
                "ipConfiguration": {
                    "name": "[concat(variables('baseName'), '-ipconfig-vm-west')]",
                    "privateIpAllocationMethod": "dynamic",
                    "vnet": "[variables('vnetSettingsWest').name]",
                    "subnet": "admin"
                },
                "pip": {
                    "name": "[concat(variables('baseName'), '-pip-vm-west')]",
                    "location": "westus",
                    "allocationMethod": "Static",
                    "version": "IPv4"
                }
            },
            "size": "[parameters('base VM size')]",
            "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "16.04-LTS",
                "version": "latest"
            },
            "osDiskName": "[concat(variables('baseName'), '-osdisk-vm-west')]",
            "admin": "[parameters('VM username')]",
            "password": "[parameters('VM password')]",
            "computerName": "admin-west",
            "isMarketplace": false,
            "extension": {
                "name": "[concat(variables('baseName'), '-vm-west-ext')]",
                "location": "westus",
                "files": [
                    "[uri(variables('baseUrl'),'scripts/vmsetup.sh')]"
                ],
                "vmName": "[concat(variables('baseName'), '-vm-west')]"
            }
        },
        "managedId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('Assigned Identity Resource Group'),'/providers/Microsoft.ManagedIdentity/userAssignedIdentities/',parameters('Assigned Identity Name'))]"
    },
    "resources": [
        {
            "name": "pip-lb-east",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgEast')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'pip/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "PipSettings": {
                        "value": "[variables('pipSettingsEast')]"
                    }
                }
            }
        },
        {
            "name": "pip-lb-west",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgEast')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'pip/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "PipSettings": {
                        "value": "[variables('pipSettingsWest')]"
                    }
                }
            }
        },
        {
            "name": "vnet-east",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgEast')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'vnet/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "VnetSettings": {
                        "value": "[variables('vnetSettingsEast')]"
                    }
                }
            }
        },
        {
            "name": "vnet-west",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgWest')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'vnet/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "VnetSettings": {
                        "value": "[variables('vnetSettingsWest')]"
                    }
                }
            }
        },
        {
            "name": "psql-east",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgEast')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'postgres/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "PostgresSettings": {
                        "value": "[variables('postgresSettingsEast')]"
                    }
                }
            }
        },
        {
            "name": "psql-west",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgWest')]",
            "dependsOn": [
                "psql-east"
            ],
            "condition": "[equals(parameters('Re-deploy'), 'false')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'postgres/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "PostgresSettings": {
                        "value": "[variables('postgresSettingsWest')]"
                    }
                }
            }
        },
        {
            "name": "aks-east",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgEast')]",
            "dependsOn": [
                "vnet-east"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'aks/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "AksSettings": {
                        "value": "[variables('aksSettingsEast')]"
                    }
                }
            }
        },
        {
            "name": "aks-west",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgWest')]",
            "dependsOn": [
                "vnet-west"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'aks/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "AksSettings": {
                        "value": "[variables('aksSettingsWest')]"
                    }
                }
            }
        },
        {
            "name": "traficmanager",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgEast')]",
            "dependsOn": [
                "pip-lb-east",
                "pip-lb-west"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'tm/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "TmSettings": {
                        "value": "[variables('trafficManagerSettings')]"
                    },
                    "EastIp": {
                        "value": "[reference('pip-lb-east').outputs.PublicIpAddress.value]"
                    },
                    "WestIp": {
                        "value": "[reference('pip-lb-west').outputs.PublicIpAddress.value]"
                    }
                }
            }
        },
        {
            "name": "vm-east",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgEast')]",
            "dependsOn": [
                "vnet-east"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'vm/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "VmSettings": {
                        "value": "[variables('vmSettingsEast')]"
                    },
                    "ManagedIdentity": {
                        "value": "[variables('managedId')]"
                    }
                }
            }
        },
        {
            "name": "vm-west",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "resourceGroup": "[variables('rgWest')]",
            "dependsOn": [
                "vnet-west"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'vm/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "VmSettings": {
                        "value": "[variables('vmSettingsWest')]"
                    },
                    "ManagedIdentity": {
                        "value": "[variables('managedId')]"
                    }
                }
            }
        },
        {
            "name": "vm-east-ext",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-01-01",
            "dependsOn": [
                "vm-east"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'),'vmext/deploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ExtSettings": {
                        "value": "[variables('vmSettingsEast').extension]"
                    },
                    "CommandToRun": {
                        "value": "[concat('./vmsetup.sh',' \"',variables('managedId'),'\"', ' \"', variables('aksSettingsEast'),'\"', ' \"',variables('rgEast'),'\"')]"
                    } 
                }
            }
        }
    ],
    "outputs": {
        "Postgres East": {
            "type": "string",
            "value": "[reference('psql-east').outputs.fqdn.value]"
        },
        "Postgres West": {
            "type": "string",
            "value": "[replace(reference('psql-east').outputs.fqdn.value, 'east', 'west')]"
        } 
  }
}